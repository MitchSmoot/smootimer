<%= render "timer_nav" %>
<% current_event = "3x3" %>


<div class="container timer-body">
  <div class= "card text-center">
    <h1>Practice Timer</h1>  
    <timeDisplay class="timer-display">00:00:00</timeDisplay>
    <div>
      <input type="button" id="timerButton" value="Start" class="timer-button">
    </div>
  </div>
  
</div>

  

<div class="container">
  <div class="row">
    <div class="col-md-8">
      <div id="chart-container" style="min-width: 310px; height: 400px; max-width: 800px; margin: 0 auto">      
      </div>
    </div>
    <div class="col-md-4">
      <div class="card timer-panel-left">
        <p>previous time: <span id="timerResult"></span></p>
        <p>last solve time in database: <%= SingleSolve.last.solve_time %></p>
        <p>last solve id in database: <%= SingleSolve.last.id %></p>
        <p>Chart data: <%= chart_times %></p>
      </div>
    </div>
  </div>
</div>

<script src="https://code.highcharts.com/modules/series-label.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>



<script>

Highcharts.chart('chart-container', {

    title: {
        text: '3x3 times'
    },

    subtitle: {
        text: '<%= current_user.username %>'
    },

    yAxis: {
        title: {
            text: 'Time (Milliseconds)'
        }
    },
    legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle'
    },

    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
            pointStart: 0
        }
    },

    series: [{
        name: 'your_rival',
        data: [60230, 57230, 62840, 53520, 55230, 54230, 50110, 45320, 43940, 39240, 37210, 33210, 34560, 30210, 29010, 25460, 27430, 26340, 25330, 26990, 22010, 24390, 23330]
    }, {
        name: 'Other_User',
        data: [45630, 47320, 45640, 42340, 44540, 43980, 40120, 43290, 41670, 40560, 42340, 39390, 38430, 36340, 39030, 35320, 33040, 36020, 35050, 34000, 33870, 35010, 32560]
    }, {
        name: '<%= current_user.username %>',
        data: <%= chart_times %>

    }],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 600
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});

// dummyTimer code
  var timeDisplay = document.getElementsByTagName('timeDisplay')[0],
      centiseconds = 0,
      seconds = 0,
      minutes = 0,
      t;

  function add() {
    centiseconds++
    if (centiseconds >= 100) {
      centiseconds = 0;
      seconds++;
      if (seconds >= 60) {
        seconds = 0;
        minutes++;
      }
    }
    timeDisplay.textContent = (minutes ? (minutes > 9 ? minutes : "0" + minutes) : "00") + ":" + (seconds ? (seconds > 9 ? seconds : "0" + seconds) : "00") + ":" + (centiseconds > 9 ? centiseconds : "0" + centiseconds);

    fakeTimer();
  }
  function fakeTimer() {
    t = setTimeout(add, 10);
  }
// end of dummyTimer code


  var timing = false;
  var start = 0
  var finalTime = 0;
  var testTime = Date.now();

    const toggleTimer = () => {
    if (timing === false) {
      start = Date.now();
      timing = true;

      fakeTimer();
    } else {
      finalTime = (Date.now() - start);
      timing = false;
      
      timeDisplay.textContent = "00:00:00";
      centiseconds = 0; seconds = 0; minutes = 0;
      clearTimeout(t);

      document.getElementById("timerResult").innerHTML = (Number(finalTime));
      console.log(parseInt(finalTime));
      console.log(Date.now());

      // post to database

     $(document).ready(function(){
        $.ajax({
          method: "POST",
          url: '/single_solves#create',
          data: {
            user_id: <%= current_user.id %>,
            event: "<%= current_event %>",
            solve_time: finalTime,
            solve_date: Date.now()
          }
        });
     });


    }
  }
  var keyBuffer = true

  var timerKeyDown = (e) => {
    var startTimer = window.event ? event : e;
    if (startTimer.keyCode === 32 && timing === true) {
      toggleTimer();
    }
  }
  var timerKeyUp = (e) => {
    var stopTimer = window.event ? event : e;
    if (stopTimer.keyCode === 32 && timing === false && keyBuffer === true) {
      toggleTimer();
      keyBuffer = false
    } else {
      keyBuffer = true
    }
  }
  document.onkeydown = timerKeyDown;
  document.onkeyup = timerKeyUp;

  timerButton.onclick = function() {
    if (timing === true) {
      toggleTimer();
    } else {
      toggleTimer();
    }   
  };

</script>



